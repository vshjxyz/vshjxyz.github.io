<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | Coding rage]]></title>
  <link href="http://www.mentalfaps.com/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://www.mentalfaps.com/"/>
  <updated>2013-10-07T11:43:38+02:00</updated>
  <id>http://www.mentalfaps.com/</id>
  <author>
    <name><![CDATA[Luca Del Bianco]]></name>
    <email><![CDATA[vshjxyz@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up Yeoman and Angular using Coffeescript]]></title>
    <link href="http://www.mentalfaps.com/blog/2013/10/04/setting-up-yeoman-and-angular-using-coffeescript/"/>
    <updated>2013-10-04T16:09:00+02:00</updated>
    <id>http://www.mentalfaps.com/blog/2013/10/04/setting-up-yeoman-and-angular-using-coffeescript</id>
    <content type="html"><![CDATA[<p>Hey! it&rsquo;s been a while I know, but I&rsquo;ve been into the deep gaming world and I basically burnt all my spare time playing <a href="http://dota2.com/">Dota2</a> (which btw is pretty awesome!).</p>

<p>Well, actually I also had the chance to study <a href="http://angularjs.org/">Angular.js</a> especially after I saw that the Yeoman&rsquo;s <a href="https://github.com/yeoman/generator-angular">generator-angular</a> has introduced the <code>--coffee</code> option to bootstrap a whole angular application written with the beloved CoffeeScript.</p>

<p>Unfortunately, the s**t doesn&rsquo;t work. I mean&hellip; there are still a few things to setup.</p>

<!--more-->


<h2>Initial setup</h2>

<p>Be sure to have installed Yeoman and his generator-angular so just basically copy this line to the shell
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>npm install -g yo generator-angular
</span></code></pre></td></tr></table></div></figure></notextile></div>
put a <code>sudo</code> in front of it if you have the global NPM packages under <code>/usr/lib/node_modules/</code> (be aware that using <code>sudo npm</code> is not the right way to install global packages, but whatever).</p>

<p>Let&rsquo;s rock the generator on a directory using
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir testapp &amp;amp;&amp;amp; <span class="nb">cd </span>testapp &amp;amp;&amp;amp; yo angular Test &amp;mdash;coffee
</span></code></pre></td></tr></table></div></figure></notextile></div>
Yeoman will ask you a series of question, you can just take the default answers by pressing Enter.</p>

<h2>Using the latest Angular.js library</h2>

<p>So here&rsquo;s the first problem. The version that is included with the generator is actually outdated (<code>1.0.8</code> right now, while Angular is at <code>1.2.0rc</code> with the latest stable <code>1.1.5</code>).</p>

<p><blockquote><p>OMFG you are a retard, just use the f**king 1.0.8</p></blockquote></p>

<p>Nice observation. Except that it&rsquo;s stupid and you sureley dont want to start a new project with an outdated library. I also need the latest version to make it easily work using my API backend (<a href="http://tastypieapi.org/">Tastypie</a>). I need in particular the <code>transformResponse</code> option introduced in the <code>1.1.x</code> branch as seen <a href="http://stackoverflow.com/a/17332903/771589">here</a>.</p>

<p>To fix this issue, you have to change the <code>bower.json</code> file that you find in the root of the project that you&rsquo;ve just created.
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">name</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">Test</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">version</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="mf">0.0</span><span class="p">.</span><span class="mi">1</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">dependencies</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s2">&quot;angular-latest&quot;</span><span class="o">:</span> <span class="s2">&quot;latest&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;json3&quot;</span><span class="o">:</span> <span class="s2">&quot;~3.2.4&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;jquery&quot;</span><span class="o">:</span> <span class="s2">&quot;~1.9.1&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;bootstrap-sass&quot;</span><span class="o">:</span> <span class="s2">&quot;~2.3.1&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;es5-shim&quot;</span><span class="o">:</span> <span class="s2">&quot;~2.0.8&quot;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">},</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">devDependencies</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Then launch this in the shell to remove the outdated libraries and install the new one:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bower uninstall angular angular-cookies angular-mocks angular-resource angular-sanitize angular-scenario
</span><span class='line'>bower install&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;These lines are used to compile angular&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;cd app/bower_components/angular-latest/
</span><span class='line'>npm install
</span><span class='line'>grunt package
</span><span class='line'><span class="nb">cd</span> ../../
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We also need to fix the paths in a couple of files, open up <code>app/index.html</code> and update the new path for the angular libraries
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/jquery/jquery.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/angular-latest/build/angular.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- build:js scripts/plugins.js --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span><span class="ni">&amp;hellip;</span><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- endbuild --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- build:js scripts/modules.js --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/angular-latest/build/angular-resource.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/angular-latest/build/angular-cookies.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/angular-latest/build/angular-sanitize.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- endbuild --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Open also the <code>karma.conf.js</code> and update the paths aswell
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// list of files / patterns to load in the browser</span>
</span><span class='line'><span class="nx">files</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">app</span><span class="o">/</span><span class="nx">bower_components</span><span class="o">/</span><span class="nx">angular</span><span class="o">-</span><span class="nx">latest</span><span class="o">/</span><span class="nx">build</span><span class="o">/</span><span class="nx">angular</span><span class="p">.</span><span class="nx">js</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">app</span><span class="o">/</span><span class="nx">bower_components</span><span class="o">/</span><span class="nx">angular</span><span class="o">-</span><span class="nx">latest</span><span class="o">/</span><span class="nx">build</span><span class="o">/</span><span class="nx">angular</span><span class="o">-</span><span class="nx">mocks</span><span class="p">.</span><span class="nx">js</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">app</span><span class="o">/</span><span class="nx">scripts</span><span class="o">/&lt;</span><span class="nx">em</span><span class="o">&gt;</span><span class="p">.</span><span class="nx">coffee</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">app</span><span class="o">/</span><span class="nx">scripts</span><span class="cm">/**/</span><span class="o">&lt;</span><span class="err">/em&gt;.coffee&amp;rsquo;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">test</span><span class="o">/</span><span class="nx">mock</span><span class="o">/&lt;</span><span class="nx">strong</span><span class="o">&gt;</span><span class="err">/*.coffee&amp;rsquo;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">test</span><span class="o">/</span><span class="nx">spec</span><span class="o">/&lt;</span><span class="sr">/strong&gt;/</span><span class="o">*</span><span class="p">.</span><span class="nx">coffee</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="p">],</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Setting up the tests</h2>

<p>Somehow the e2e tests are not contemplated with this generator. We need to set them up opening the <code>Gruntfile.js</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">karma</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">unit</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">configFile</span><span class="o">:</span> <span class="s1">&#39;karma.conf.js&#39;</span><span class="p">,</span>
</span><span class='line'><span class="nx">singleRun</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="c1">// Substitute this piece of code with this</span>
</span><span class='line'><span class="nx">karma</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">e2e</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">configFile</span><span class="o">:</span> <span class="s1">&#39;karma-e2e.conf.js&#39;</span><span class="p">,</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">unit</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">configFile</span><span class="o">:</span> <span class="s1">&#39;karma.conf.js&#39;</span><span class="p">,</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">},</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
And at the bottom of the file
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="c1">// REMOVE THIS TASK</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">test</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s1">&#39;clean:server&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;concurrent:test&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;autoprefixer&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;connect:test&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;karma&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Change that piece of code with these two, to enable the test:unit and test:e2e tasks</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">test</span><span class="o">:</span><span class="nx">unit</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s1">&#39;clean:server&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;concurrent:test&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;autoprefixer&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;connect:test&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;karma:unit&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">test</span><span class="o">:</span><span class="nx">e2e</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s1">&#39;clean:server&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;concurrent:test&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;autoprefixer&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;connect:livereload&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;karma:e2e&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
This operation will enable two different tasks that you can launch with <code>grunt test:unit</code> and <code>grunt test:e2e</code> with their respective behaviour.</p>

<h2>Basic example of a RESTful Angular service calling Tastypie API</h2>

<p>So, if you have followed the steps you should be able to run the application using <code>grunt server</code> and see the typical Yeoman greeting:</p>

<p><a href="/images/setting-up-yeoman-and-angular-using-coffeescript/alloallo.png"><span class='caption-wrapper center'><img class='caption' src='/images/setting-up-yeoman-and-angular-using-coffeescript/alloallo.png' width='400' height='223' title='The Yeoman base view &ndash; click to zoom'><span class='caption-text'>The Yeoman base view &ndash; click to zoom</span></span></a></p>

<p>Let&rsquo;s get and display a list via AJAX then. First, we have to create a new service using <code>yo angular:factory MyObject</code>. This will create two files, one is the real service, the other is the corresponding test file.</p>

<p>Open the new file under <code>app/scripts/services/MyObject.coffee</code> and substitute it with this:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">TestApp</span><span class="p">.</span><span class="nx">services</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">ngResource</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]).</span><span class="nx">factory</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">MyObject</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$resource</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$http</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">(</span><span class="nx">$resource</span><span class="p">,</span> <span class="nx">$http</span><span class="p">)</span> <span class="o">&amp;</span><span class="nx">ndash</span><span class="p">;</span><span class="o">&gt;&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">$resource</span> <span class="s">&#39;http://localhost:8000\:8000/your/api/endpoint/&#39;</span><span class="p">,</span> <span class="p">{},</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">query:</span>
</span><span class='line'>        <span class="nv">method: </span><span class="s">&#39;GET&#39;</span>
</span><span class='line'>        <span class="nv">isArray: </span><span class="kc">true</span>
</span><span class='line'>        <span class="nv">transformResponse: </span><span class="nx">$http</span><span class="p">.</span><span class="nx">defaults</span><span class="p">.</span><span class="nx">transformResponse</span><span class="p">.</span><span class="nx">concat</span> <span class="p">[(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">headersGetter</span><span class="p">)</span> <span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="nx">data</span><span class="o">?</span> <span class="o">and</span> <span class="nx">data</span> <span class="o">isnt</span> <span class="s">&#39;&#39;</span>
</span><span class='line'>                <span class="nv">result = </span><span class="nx">data</span><span class="p">.</span><span class="nx">objects</span>
</span><span class='line'>                <span class="nv">result.meta = </span><span class="nx">data</span><span class="p">.</span><span class="nx">meta</span>
</span><span class='line'>                <span class="nx">result</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
This will:
* Inject the <code>ngResource</code> object inside the factory, allowing us to define a new <code>$resource</code>
* Inject the <code>$http</code> object inside the factory to allow us to extend the <code>transformResponse</code> method (mandatory if you are using Tastypie as your API backend)
* Define your new resource as MyObject
* Define the module <code>TestApp.services</code> where you will can all the services of this app</p>

<p>This is what the main controller has become:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">TestApp</span><span class="p">.</span><span class="nx">controllers</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[]).</span><span class="nx">controller</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">MainCtrl</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$scope</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">MyObject</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">MyObject</span><span class="p">)</span> <span class="o">&amp;</span><span class="nx">ndash</span><span class="p">;</span><span class="o">&gt;&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">MyObject</span><span class="p">.</span><span class="nx">query</span><span class="p">().</span><span class="nx">$then</span> <span class="p">(</span><span class="nx">objects</span><span class="p">)</span> <span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$scope.objects = </span><span class="nx">objects</span><span class="p">.</span><span class="nx">data</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This code will inject our factory object inside the main controller. The controller will then query the object and then inject in the <code>$scope</code> the resulting items.</p>

<p>Finally, we can add some super simple code in our main controller view (HTML) to dump the list:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;hero-unit&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>Here&#39;s my list of objects<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li</span> <span class="na">ng-repeat=</span><span class="s">&quot;object in objects&quot;</span><span class="nt">&gt;</span>{{object.name}}<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Running the application with a proper Tastypie API, will return you the list of objects name:</p>

<p><a href="/images/setting-up-yeoman-and-angular-using-coffeescript/objects.png"><span class='caption-wrapper center'><img class='caption' src='/images/setting-up-yeoman-and-angular-using-coffeescript/objects.png' width='400' height='168' title='The Yeoman base view &ndash; click to zoom'><span class='caption-text'>The Yeoman base view &ndash; click to zoom</span></span></a></p>

<p><strong> THE WHOLE CODE CAN BE FOUND HERE: <a href="https://github.com/vshjxyz/angulartestapp">https://github.com/vshjxyz/angulartestapp</a> </strong></p>

<p>This is pretty straightforward and I know that the tests are lacking but <strong>I&rsquo;M WORKING ON IT</strong> OK??!</p>

<p>:) well, I&rsquo;ll try to update / post more stuff about AngularJS as soon as I discover new &lsquo;things&rsquo;. Peace out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Yeoman with Phonegap and Backbone.js]]></title>
    <link href="http://www.mentalfaps.com/blog/2013/08/29/using-yeoman-with-phonegap-and-backbone-dot-js/"/>
    <updated>2013-08-29T10:32:00+02:00</updated>
    <id>http://www.mentalfaps.com/blog/2013/08/29/using-yeoman-with-phonegap-and-backbone-dot-js</id>
    <content type="html"><![CDATA[<p>Being at µForge, we had to face some serious problems trying to fix and use a correct workflow for our Phonegap application.</p>

<p>The application has its core built in Backbone.js and uses jQuery Mobile to render itself.
It also comunicates with a Django server that has an API built using Tastypie to get/set the data.</p>

<p>The app is being compiled for Android and I actually have no experiences with Phonegap&rsquo;s iOs building process, but the principle is sureley the same.</p>

<p><blockquote><p>I dont give a f**k about your app, just show us the code!</p></blockquote></p>

<p>OK, OK, use the following steps to setup all the base things needed to correctly build a web app with Yeoman using a single Gruntfile:</p>

<p><strong>NOTE</strong>: I&rsquo;ve used the Phonegap 2.7.0 version for this example app, I&rsquo;m sure that you&rsquo;ll figure out how to make it work for Phonegap 3+ (afaik it&rsquo;s easy).</p>

<!--more-->


<h2>The Setup</h2>

<p>First of all, use <a href="http://docs.phonegap.com/en/2.7.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android">THIS</a> guide to setup the Phonegap environment. Basically you need to install the Android ADT bundle and setup the global path to make you have the adb command in the terminal and stuff like that.
Create a basic app using the Phonegap binary (inside <code>phonegap-2.7.0/lib/android/bin/</code>)
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./create ../../../../helloapp/hello_android com.example.hello hello
</span></code></pre></td></tr></table></div></figure></notextile></div>
Install Yeoman and the basic backbone generator (or the basic <code>generator-webapp</code> if you prefer)
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>npm install -g yo &amp;amp;&amp;amp; npm install -g generator-backbone
</span></code></pre></td></tr></table></div></figure></notextile></div>
Create a Yeoman project inside the <code>helloapp</code> folder that you&rsquo;ve created before with the Phonegap&rsquo;s create command
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>helloapp <span class="c"># whenever the helloapp is</span>
</span><span class='line'>mkdir Hello &amp;amp;&amp;amp; <span class="nb">cd </span>Hello
</span><span class='line'>yo backbone &amp;mdash;coffee &amp;mdash;template-framework<span class="o">=</span>handlebars <span class="c"># You can use different configurations ofc</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
As you can see, this command will generate a shitload of files in the current directory. Note that the directory name has the first letter uppercase, &lsquo;cause the backbone generator will use that name as the basic namespace.</p>

<p>Install <a href="http://emulate.phonegap.com/">Ripple</a> for Chrome if you want to have a nice looking of the whole app in a pseudo-device. Unfortunately the Phonegap &ldquo;integration&rdquo; seems to be broken at the moment, so if you activate the plugin just say that you are testing a normal mobile Web app.</p>

<p>So here&rsquo;s the trick, you must delete all the asset folder inside <code>helloapp/hello_android/assets/www</code> to allow you to build the app from Yeoman. Create a link from the <code>dist</code> directory of the Yeoman app to the <code>www</code> directory of the Phonegap &ndash; android app.</p>

<p><strong>Don&rsquo;t</strong> forget to copy the <code>cordova*.js</code> file to your <code>vendor</code> folder of the Yeoman app.
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cp ../hello_android/assets/www/cordova&lt;em&gt;.js app/scripts/vendor
</span><span class='line'>rm ../hello_android/assets/www/&lt;/em&gt; -rf
</span><span class='line'>ln -s ../hello_android/assets/www dist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Your directory tree should look pretty much like this:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>├── Hello
</span><span class='line'>│   ├── app
</span><span class='line'>│   ├── dist &amp;ndash;&gt; ../hello_android/assets/www/
</span><span class='line'>│   ├── node_modules
</span><span class='line'>│   └── <span class="nb">test</span>
</span><span class='line'>└── hello_android&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;├── assets
</span><span class='line'>├── bin
</span><span class='line'>├── cordova
</span><span class='line'>├── libs
</span><span class='line'>├── res
</span><span class='line'>└── src
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Basic configurations</h2>

<p>Add these lines in the <code>&lt;head&gt;</code> section of the <code>app/index.html</code> file
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- build:js scripts/cordova.js --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;scripts/vendor/cordova-2.7.0.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- endbuild --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Open the Gruntfile and add these two lines</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Inside the Gruntfile&amp;hellip;</span>
</span><span class='line'><span class="nx">copy</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">dist</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">files</span><span class="o">:</span> <span class="p">[{</span>
</span><span class='line'>        <span class="nx">expand</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">dot</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">cwd</span><span class="o">:</span> <span class="s1">&#39;&amp;lt;%= yeoman.app %&amp;gt;&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;&amp;lt;%= yeoman.dist %&amp;gt;&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">src</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="s1">&#39;cordova-*.js&#39;</span><span class="p">,</span> <span class="err">#</span> <span class="nx">these</span> <span class="nx">two</span> <span class="nx">lines</span> <span class="nx">are</span> <span class="nx">needed</span> <span class="nx">to</span> <span class="nx">make</span> <span class="nx">Yeoman</span> <span class="nx">include</span> <span class="nx">the</span> <span class="nx">cordova</span> <span class="nx">js</span> <span class="nx">plugin</span>
</span><span class='line'>            <span class="s1">&#39;cordova_plugins.json&#39;</span><span class="p">,</span> <span class="err">#</span>
</span><span class='line'>            <span class="s1">&#39;*.{ico,txt}&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;.htaccess&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;images/{,*/}*.{webp,gif}&#39;</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>    <span class="p">}]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">},</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Disable yuglify if you are using backbone, because it does not allow the app to load the files in the correct order.
I&rsquo;ve noticed that if you don&rsquo;t do this, the <code>main.js</code> files in the <code>www</code> directory will always have the scripts included in
an apparently random order (so it&rsquo;s a huge problem if you&rsquo;re using Backbone)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">build</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s1">&#39;clean:dist&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;coffee&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;createDefaultTemplate&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;handlebars&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;compass:dist&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;useminPrepare&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;imagemin&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;htmlmin&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;concat&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;cssmin&#39;</span><span class="p">,</span>
</span><span class='line'><span class="c1">// &#39;uglify&#39;,</span>
</span><span class='line'><span class="s1">&#39;copy&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;rev&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;usemin&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Let&rsquo;s write a basic main.coffee that allow us to have two different behaviour if we are browsing from Chrome (for debug purposes) or directly from the app:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (main.coffee)</span> <a href='/downloads/code/main.coffee'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nv">Hello =</span>
</span><span class='line'>  <span class="nv">Models: </span><span class="p">{}</span>
</span><span class='line'>  <span class="nv">Collections: </span><span class="p">{}</span>
</span><span class='line'>  <span class="nv">Views: </span><span class="p">{}</span>
</span><span class='line'>  <span class="nv">Routers: </span><span class="p">{}</span>
</span><span class='line'>  <span class="nv">init: </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="s">&#39;use strict&#39;</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&#39;Hello from Backbone!&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&#39;Waiting for the device to be ready...&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nv">DEBUG = </span><span class="kc">false</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&#39;init Started&#39;</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">not</span> <span class="nb">window</span><span class="p">.</span><span class="nx">device</span><span class="p">.</span><span class="nx">available</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&quot;WE ARE IN DEBUG&quot;</span>
</span><span class='line'>        <span class="nb">window</span><span class="p">.</span><span class="nv">DEBUG = </span><span class="kc">true</span>
</span><span class='line'>        <span class="c1"># In this case we should be in a desktop application (debug)</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1"># Login with the test user (that has limited privileges and/or makes the app point to another endpoint)</span>
</span><span class='line'>        <span class="nv">Hello.BASEURL = </span><span class="s">&#39;localhost:8000&#39;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&#39;Initializing the main router&#39;</span>
</span><span class='line'>        <span class="nx">Hello</span><span class="p">.</span><span class="nx">init</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Waiting for phoneGap to load</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span> <span class="s">&#39;deviceready&#39;</span><span class="p">,</span> <span class="nf">-&gt;</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&quot;WE ARE NOT IN DEBUG&quot;</span>
</span><span class='line'>        <span class="c1"># PhoneGap is loaded</span>
</span><span class='line'>        <span class="k">try</span>
</span><span class='line'>            <span class="k">throw</span> <span class="s">&quot;Cordova variable does not exist. Check that you have included cordova.js correctly&quot;</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">cordova</span> <span class="o">is</span> <span class="s">&quot;undefined&quot;</span><span class="p">)</span> <span class="o">and</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">Cordova</span> <span class="o">is</span> <span class="s">&quot;undefined&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1"># FB plugin initialized</span>
</span><span class='line'>
</span><span class='line'>            <span class="nv">Hello.BASEURL = </span><span class="s">&#39;api.yourdomain.com&#39;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&#39;Initializing the main router&#39;</span>
</span><span class='line'>            <span class="nx">Hello</span><span class="p">.</span><span class="nx">init</span><span class="p">()</span>
</span><span class='line'>        <span class="k">catch</span> <span class="nx">e</span>
</span><span class='line'>            <span class="nb">window</span><span class="p">.</span><span class="nv">last_error = </span><span class="nx">e</span>
</span><span class='line'>            <span class="nx">console</span><span class="p">.</span><span class="nx">error</span> <span class="nx">e</span>
</span><span class='line'>            <span class="k">throw</span> <span class="nx">e</span>
</span><span class='line'>    <span class="p">,</span> <span class="kc">false</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Finally, create an empty <code>cordova_plugins.json</code> in the root of the <code>app</code> folder as required by Phonegap (for cross-domain issues if I remember well)
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>touch app/cordova_plugins.json
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Testing</h2>

<p>If you managed to do everything in the correct way, let&rsquo;s test the mudafucka!</p>

<p>After <em>ALL</em> these passages, you should be able to use the <code>grunt server</code> command from the <code>Hello</code> folder to use Yeoman in the browser
along with Ripple. You should see something like this:</p>

<p><span class='caption-wrapper center'><img class='caption' src='/images/using-yeoman-with-phonegap/ripple.png' width='' height='' title='The base app with Ripple in Chrome'><span class='caption-text'>The base app with Ripple in Chrome</span></span></p>

<p>The JS console should show ~this:</p>

<p><a href="/images/using-yeoman-with-phonegap/debug.png"><span class='caption-wrapper center'><img class='caption' src='/images/using-yeoman-with-phonegap/debug.png' width='400' height='40' title='The JS console screenshot &ndash; click to zoom'><span class='caption-text'>The JS console screenshot &ndash; click to zoom</span></span></a></p>

<p>Notice the <code>WE ARE IN DEBUG</code> part that indicates the flow of the code. If we launch a <code>grunt --force</code> from the <code>Hello</code> folder, we will not have
all the code compiled in the assets/www folder of our Android project.</p>

<p>Just use Eclipse and open the <code>hello_android</code> folder as an existing Android project and launch it with an emulator or your phone and you should see these lines:</p>

<p><a href="/images/using-yeoman-with-phonegap/logcat.png"><span class='caption-wrapper center'><img class='caption' src='/images/using-yeoman-with-phonegap/logcat.png' width='400' height='111' title='The logcat screenshot &ndash; click to zoom'><span class='caption-text'>The logcat screenshot &ndash; click to zoom</span></span></a></p>

<p>As you can see, the code followed another flow in comparison with the webapp. In the end these passages allow you to have this kind of workflow:</p>

<ol>
<li>You code with your favorite editor while launching <code>grunt server</code> to have <code>LiveReload</code> active and be able to see your modifications in <strong>REAL TIME</strong> (which is the biggest plus)</li>
<li>Test everything related to the app with Ripple, being able to use the JS console to directly debug your code</li>
<li>Run <code>grunt --force</code> to build your app to the android project</li>
<li>Test it every time you need it to an emulator via Eclipse</li>
</ol>


<p>I&rsquo;m sure that there are some simplier ways to achieve this but right now this kind of workflow is still mainly unused from the mass. I personally digg too much the livereload advantages along with the ability to debug without the need to place thousands of <code>console.log</code>. Keep also in mind that these libraries are in continue development so its pretty hard to find the right way to do things. <strong>ENJOY!</strong></p>
]]></content>
  </entry>
  
</feed>
