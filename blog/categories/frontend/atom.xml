<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: frontend | Coding rage]]></title>
  <link href="http://www.mentalfaps.com/blog/categories/frontend/atom.xml" rel="self"/>
  <link href="http://www.mentalfaps.com/"/>
  <updated>2013-10-07T11:43:38+02:00</updated>
  <id>http://www.mentalfaps.com/</id>
  <author>
    <name><![CDATA[Luca Del Bianco]]></name>
    <email><![CDATA[vshjxyz@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up Yeoman and Angular using Coffeescript]]></title>
    <link href="http://www.mentalfaps.com/blog/2013/10/04/setting-up-yeoman-and-angular-using-coffeescript/"/>
    <updated>2013-10-04T16:09:00+02:00</updated>
    <id>http://www.mentalfaps.com/blog/2013/10/04/setting-up-yeoman-and-angular-using-coffeescript</id>
    <content type="html"><![CDATA[<p>Hey! it&rsquo;s been a while I know, but I&rsquo;ve been into the deep gaming world and I basically burnt all my spare time playing <a href="http://dota2.com/">Dota2</a> (which btw is pretty awesome!).</p>

<p>Well, actually I also had the chance to study <a href="http://angularjs.org/">Angular.js</a> especially after I saw that the Yeoman&rsquo;s <a href="https://github.com/yeoman/generator-angular">generator-angular</a> has introduced the <code>--coffee</code> option to bootstrap a whole angular application written with the beloved CoffeeScript.</p>

<p>Unfortunately, the s**t doesn&rsquo;t work. I mean&hellip; there are still a few things to setup.</p>

<!--more-->


<h2>Initial setup</h2>

<p>Be sure to have installed Yeoman and his generator-angular so just basically copy this line to the shell
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>npm install -g yo generator-angular
</span></code></pre></td></tr></table></div></figure></notextile></div>
put a <code>sudo</code> in front of it if you have the global NPM packages under <code>/usr/lib/node_modules/</code> (be aware that using <code>sudo npm</code> is not the right way to install global packages, but whatever).</p>

<p>Let&rsquo;s rock the generator on a directory using
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir testapp &amp;amp;&amp;amp; <span class="nb">cd </span>testapp &amp;amp;&amp;amp; yo angular Test &amp;mdash;coffee
</span></code></pre></td></tr></table></div></figure></notextile></div>
Yeoman will ask you a series of question, you can just take the default answers by pressing Enter.</p>

<h2>Using the latest Angular.js library</h2>

<p>So here&rsquo;s the first problem. The version that is included with the generator is actually outdated (<code>1.0.8</code> right now, while Angular is at <code>1.2.0rc</code> with the latest stable <code>1.1.5</code>).</p>

<p><blockquote><p>OMFG you are a retard, just use the f**king 1.0.8</p></blockquote></p>

<p>Nice observation. Except that it&rsquo;s stupid and you sureley dont want to start a new project with an outdated library. I also need the latest version to make it easily work using my API backend (<a href="http://tastypieapi.org/">Tastypie</a>). I need in particular the <code>transformResponse</code> option introduced in the <code>1.1.x</code> branch as seen <a href="http://stackoverflow.com/a/17332903/771589">here</a>.</p>

<p>To fix this issue, you have to change the <code>bower.json</code> file that you find in the root of the project that you&rsquo;ve just created.
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">name</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">Test</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">version</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="mf">0.0</span><span class="p">.</span><span class="mi">1</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">dependencies</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s2">&quot;angular-latest&quot;</span><span class="o">:</span> <span class="s2">&quot;latest&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;json3&quot;</span><span class="o">:</span> <span class="s2">&quot;~3.2.4&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;jquery&quot;</span><span class="o">:</span> <span class="s2">&quot;~1.9.1&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;bootstrap-sass&quot;</span><span class="o">:</span> <span class="s2">&quot;~2.3.1&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;es5-shim&quot;</span><span class="o">:</span> <span class="s2">&quot;~2.0.8&quot;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">},</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">devDependencies</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Then launch this in the shell to remove the outdated libraries and install the new one:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bower uninstall angular angular-cookies angular-mocks angular-resource angular-sanitize angular-scenario
</span><span class='line'>bower install&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;These lines are used to compile angular&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;cd app/bower_components/angular-latest/
</span><span class='line'>npm install
</span><span class='line'>grunt package
</span><span class='line'><span class="nb">cd</span> ../../
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We also need to fix the paths in a couple of files, open up <code>app/index.html</code> and update the new path for the angular libraries
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/jquery/jquery.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/angular-latest/build/angular.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- build:js scripts/plugins.js --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span><span class="ni">&amp;hellip;</span><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- endbuild --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- build:js scripts/modules.js --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/angular-latest/build/angular-resource.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/angular-latest/build/angular-cookies.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/angular-latest/build/angular-sanitize.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- endbuild --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Open also the <code>karma.conf.js</code> and update the paths aswell
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// list of files / patterns to load in the browser</span>
</span><span class='line'><span class="nx">files</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">app</span><span class="o">/</span><span class="nx">bower_components</span><span class="o">/</span><span class="nx">angular</span><span class="o">-</span><span class="nx">latest</span><span class="o">/</span><span class="nx">build</span><span class="o">/</span><span class="nx">angular</span><span class="p">.</span><span class="nx">js</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">app</span><span class="o">/</span><span class="nx">bower_components</span><span class="o">/</span><span class="nx">angular</span><span class="o">-</span><span class="nx">latest</span><span class="o">/</span><span class="nx">build</span><span class="o">/</span><span class="nx">angular</span><span class="o">-</span><span class="nx">mocks</span><span class="p">.</span><span class="nx">js</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">app</span><span class="o">/</span><span class="nx">scripts</span><span class="o">/&lt;</span><span class="nx">em</span><span class="o">&gt;</span><span class="p">.</span><span class="nx">coffee</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">app</span><span class="o">/</span><span class="nx">scripts</span><span class="cm">/**/</span><span class="o">&lt;</span><span class="err">/em&gt;.coffee&amp;rsquo;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">test</span><span class="o">/</span><span class="nx">mock</span><span class="o">/&lt;</span><span class="nx">strong</span><span class="o">&gt;</span><span class="err">/*.coffee&amp;rsquo;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">test</span><span class="o">/</span><span class="nx">spec</span><span class="o">/&lt;</span><span class="sr">/strong&gt;/</span><span class="o">*</span><span class="p">.</span><span class="nx">coffee</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="p">],</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Setting up the tests</h2>

<p>Somehow the e2e tests are not contemplated with this generator. We need to set them up opening the <code>Gruntfile.js</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">karma</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">unit</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">configFile</span><span class="o">:</span> <span class="s1">&#39;karma.conf.js&#39;</span><span class="p">,</span>
</span><span class='line'><span class="nx">singleRun</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="c1">// Substitute this piece of code with this</span>
</span><span class='line'><span class="nx">karma</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">e2e</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">configFile</span><span class="o">:</span> <span class="s1">&#39;karma-e2e.conf.js&#39;</span><span class="p">,</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">unit</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">configFile</span><span class="o">:</span> <span class="s1">&#39;karma.conf.js&#39;</span><span class="p">,</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">},</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
And at the bottom of the file
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="c1">// REMOVE THIS TASK</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">test</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s1">&#39;clean:server&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;concurrent:test&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;autoprefixer&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;connect:test&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;karma&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Change that piece of code with these two, to enable the test:unit and test:e2e tasks</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">test</span><span class="o">:</span><span class="nx">unit</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s1">&#39;clean:server&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;concurrent:test&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;autoprefixer&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;connect:test&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;karma:unit&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">test</span><span class="o">:</span><span class="nx">e2e</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s1">&#39;clean:server&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;concurrent:test&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;autoprefixer&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;connect:livereload&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;karma:e2e&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
This operation will enable two different tasks that you can launch with <code>grunt test:unit</code> and <code>grunt test:e2e</code> with their respective behaviour.</p>

<h2>Basic example of a RESTful Angular service calling Tastypie API</h2>

<p>So, if you have followed the steps you should be able to run the application using <code>grunt server</code> and see the typical Yeoman greeting:</p>

<p><a href="/images/setting-up-yeoman-and-angular-using-coffeescript/alloallo.png"><span class='caption-wrapper center'><img class='caption' src='/images/setting-up-yeoman-and-angular-using-coffeescript/alloallo.png' width='400' height='223' title='The Yeoman base view &ndash; click to zoom'><span class='caption-text'>The Yeoman base view &ndash; click to zoom</span></span></a></p>

<p>Let&rsquo;s get and display a list via AJAX then. First, we have to create a new service using <code>yo angular:factory MyObject</code>. This will create two files, one is the real service, the other is the corresponding test file.</p>

<p>Open the new file under <code>app/scripts/services/MyObject.coffee</code> and substitute it with this:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">TestApp</span><span class="p">.</span><span class="nx">services</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">ngResource</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]).</span><span class="nx">factory</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">MyObject</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$resource</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$http</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">(</span><span class="nx">$resource</span><span class="p">,</span> <span class="nx">$http</span><span class="p">)</span> <span class="o">&amp;</span><span class="nx">ndash</span><span class="p">;</span><span class="o">&gt;&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">$resource</span> <span class="s">&#39;http://localhost:8000\:8000/your/api/endpoint/&#39;</span><span class="p">,</span> <span class="p">{},</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">query:</span>
</span><span class='line'>        <span class="nv">method: </span><span class="s">&#39;GET&#39;</span>
</span><span class='line'>        <span class="nv">isArray: </span><span class="kc">true</span>
</span><span class='line'>        <span class="nv">transformResponse: </span><span class="nx">$http</span><span class="p">.</span><span class="nx">defaults</span><span class="p">.</span><span class="nx">transformResponse</span><span class="p">.</span><span class="nx">concat</span> <span class="p">[(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">headersGetter</span><span class="p">)</span> <span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="nx">data</span><span class="o">?</span> <span class="o">and</span> <span class="nx">data</span> <span class="o">isnt</span> <span class="s">&#39;&#39;</span>
</span><span class='line'>                <span class="nv">result = </span><span class="nx">data</span><span class="p">.</span><span class="nx">objects</span>
</span><span class='line'>                <span class="nv">result.meta = </span><span class="nx">data</span><span class="p">.</span><span class="nx">meta</span>
</span><span class='line'>                <span class="nx">result</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
This will:
* Inject the <code>ngResource</code> object inside the factory, allowing us to define a new <code>$resource</code>
* Inject the <code>$http</code> object inside the factory to allow us to extend the <code>transformResponse</code> method (mandatory if you are using Tastypie as your API backend)
* Define your new resource as MyObject
* Define the module <code>TestApp.services</code> where you will can all the services of this app</p>

<p>This is what the main controller has become:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">use</span> <span class="nx">strict</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">TestApp</span><span class="p">.</span><span class="nx">controllers</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[]).</span><span class="nx">controller</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">MainCtrl</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$scope</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">MyObject</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">MyObject</span><span class="p">)</span> <span class="o">&amp;</span><span class="nx">ndash</span><span class="p">;</span><span class="o">&gt;&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">MyObject</span><span class="p">.</span><span class="nx">query</span><span class="p">().</span><span class="nx">$then</span> <span class="p">(</span><span class="nx">objects</span><span class="p">)</span> <span class="o">-&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$scope.objects = </span><span class="nx">objects</span><span class="p">.</span><span class="nx">data</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This code will inject our factory object inside the main controller. The controller will then query the object and then inject in the <code>$scope</code> the resulting items.</p>

<p>Finally, we can add some super simple code in our main controller view (HTML) to dump the list:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;hero-unit&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>Here&#39;s my list of objects<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li</span> <span class="na">ng-repeat=</span><span class="s">&quot;object in objects&quot;</span><span class="nt">&gt;</span>{{object.name}}<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Running the application with a proper Tastypie API, will return you the list of objects name:</p>

<p><a href="/images/setting-up-yeoman-and-angular-using-coffeescript/objects.png"><span class='caption-wrapper center'><img class='caption' src='/images/setting-up-yeoman-and-angular-using-coffeescript/objects.png' width='400' height='168' title='The Yeoman base view &ndash; click to zoom'><span class='caption-text'>The Yeoman base view &ndash; click to zoom</span></span></a></p>

<p><strong> THE WHOLE CODE CAN BE FOUND HERE: <a href="https://github.com/vshjxyz/angulartestapp">https://github.com/vshjxyz/angulartestapp</a> </strong></p>

<p>This is pretty straightforward and I know that the tests are lacking but <strong>I&rsquo;M WORKING ON IT</strong> OK??!</p>

<p>:) well, I&rsquo;ll try to update / post more stuff about AngularJS as soon as I discover new &lsquo;things&rsquo;. Peace out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pure CSS3 turnover effect animation of a button without sprites]]></title>
    <link href="http://www.mentalfaps.com/blog/2013/09/01/pure-css3-turnover-effect-animation-of-a-button-without-sprites/"/>
    <updated>2013-09-01T15:06:00+02:00</updated>
    <id>http://www.mentalfaps.com/blog/2013/09/01/pure-css3-turnover-effect-animation-of-a-button-without-sprites</id>
    <content type="html"><![CDATA[<p>Ye ye I know that this is all but &lsquo;real&rsquo; coding, but I want to grab the chance to post something here just because I&rsquo;ve done some little css modifications to this blog.</p>

<p>Oh yes, I&rsquo;m excited in particular about the &lsquo;read on&rsquo; button animation and how easy is to achieve this without using sprites or images.</p>

<p>In short, here is where I want to go:</p>

<p><a href="/images/pure-css3-turnover-effect-animation-of-a-button-without-sprites/animation.gif"><span class='caption-wrapper center'><img class='caption' src='/images/pure-css3-turnover-effect-animation-of-a-button-without-sprites/animation.gif' width='400' height='67' title='The CSS3 button animation effect &ndash; click to zoom'><span class='caption-text'>The CSS3 button animation effect &ndash; click to zoom</span></span></a></p>

<!--more-->


<p>So, let&rsquo;s see the html code of the button:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- inside the article... --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;footer&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>div class=&quot;full-article&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        Read on →
</span><span class='line'>        <span class="ni">&amp;lt;</span>a class=&quot;full-article-hover&quot; rel=&quot;full-article&quot; href=&quot;http://www.mentalfaps.com/yourlink&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>            Read on →
</span><span class='line'>        <span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/div<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/footer&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>As you can see, there&rsquo;s no real magic but a simple anchor (or link, whatever) <code>a</code> inside a <code>div</code> all wrapped in a <code>footer</code> element.</p>

<p>The <code>footer</code> will be our viewport, the <code>div</code> will be the only element animated and it should translate top by the amount of his height as explained here:</p>

<p><a href="/images/pure-css3-turnover-effect-animation-of-a-button-without-sprites/explanation.png"><span class='caption-wrapper center'><img class='caption' src='/images/pure-css3-turnover-effect-animation-of-a-button-without-sprites/explanation.png' width='400' height='53' title='The animation explanation &ndash; click to zoom'><span class='caption-text'>The animation explanation &ndash; click to zoom</span></span></a></p>

<p>So basically we need to have a fixed height and use a css transition to move the div up by his whole height.
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="k">@mixin</span><span class="nf"> article-footer</span><span class="p">(</span><span class="nv">$height</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">pre</span><span class="o">&gt;&lt;</span><span class="nt">code</span><span class="o">&gt;</span><span class="nt">article</span> <span class="nt">footer</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Setting the viewport height</span>
</span><span class='line'>    <span class="na">height</span><span class="o">:</span> <span class="nv">$height</span><span class="p">;</span>
</span><span class='line'>    <span class="nt">div</span><span class="o">,</span> <span class="nt">a</span> <span class="p">{</span>
</span><span class='line'>        <span class="na">cursor</span><span class="o">:</span> <span class="no">pointer</span><span class="p">;</span>
</span><span class='line'>        <span class="na">position</span><span class="o">:</span> <span class="no">relative</span><span class="p">;</span>
</span><span class='line'>        <span class="na">display</span><span class="o">:</span> <span class="no">block</span><span class="p">;</span><span class="na">ù</span>
</span><span class='line'>        <span class="c1">// Setting the single div and the anchor to the same height equal to the viewport</span>
</span><span class='line'>        <span class="na">height</span><span class="o">:</span> <span class="nv">$height</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">// Centering the text</span>
</span><span class='line'>        <span class="na">line-height</span><span class="o">:</span> <span class="nv">$height</span><span class="p">;</span>
</span><span class='line'>        <span class="k">&amp;</span><span class="nt">amp</span><span class="o">;</span><span class="nc">.full-article</span> <span class="p">{</span>
</span><span class='line'>            <span class="na">background-color</span><span class="o">:</span> <span class="nf">rgba</span><span class="p">(</span><span class="mi">170</span><span class="o">,</span><span class="mi">170</span><span class="o">,</span><span class="mi">170</span><span class="o">,</span><span class="mi">0</span><span class="mf">.2</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">&amp;</span><span class="nt">amp</span><span class="o">;</span><span class="nc">.full-article-hover</span> <span class="p">{</span>
</span><span class='line'>            <span class="na">background-color</span><span class="o">:</span> <span class="nf">rgba</span><span class="p">(</span><span class="mi">170</span><span class="o">,</span><span class="mi">170</span><span class="o">,</span><span class="mi">170</span><span class="o">,</span><span class="mi">0</span><span class="mf">.5</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">code</span><span class="o">&gt;&lt;/</span><span class="nt">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
You can see that I&rsquo;ve wrapped all inside a <code>mixin</code> so I can easily use one-line of code to sett the different buttons height based on the viewport of the user&rsquo;s browser.
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="c1">// The button will be 40px for every resolution</span>
</span><span class='line'><span class="k">@include</span><span class="nd"> article-footer</span><span class="p">(</span><span class="mi">40</span><span class="kt">px</span><span class="p">);</span><span class="na">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="na">&lt;p&gt;@media</span><span class="err"> </span><span class="na">only</span><span class="err"> </span><span class="na">screen</span><span class="err"> </span><span class="na">and</span><span class="err"> </span><span class="na">(max-height</span><span class="o">:</span> <span class="mi">650</span><span class="kt">px</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">pre</span><span class="o">&gt;&lt;</span><span class="nt">code</span><span class="o">&gt;//</span> <span class="nt">Except</span> <span class="nt">if</span> <span class="nt">I</span> <span class="nt">browse</span> <span class="nt">the</span> <span class="nt">website</span> <span class="nt">with</span> <span class="nt">a</span> <span class="nt">screen</span> <span class="nt">that</span> <span class="nt">has</span> <span class="nt">a</span> <span class="nt">height</span> <span class="k">&amp;</span><span class="nt">lt</span><span class="o">;</span> <span class="nt">650</span>
</span><span class='line'><span class="o">@</span><span class="nt">include</span> <span class="nt">article-footer</span><span class="o">(</span><span class="nt">25px</span><span class="o">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">code</span><span class="o">&gt;&lt;/</span><span class="nt">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;//</span> <span class="k">&amp;</span><span class="nt">hellip</span><span class="o">;</span> <span class="nt">more</span> <span class="nt">media</span> <span class="nt">breakpoints</span> <span class="k">&amp;</span><span class="nt">hellip</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
With <a href="http://compass-style.org/">Compass</a> I can use one of their mixin to super easily use <a href="http://compass-style.org/reference/compass/css3/transition/">CSS3 transitions</a>, so all I need to do is simply add this code to get the animation effect:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="c1">// Inside the previous code &amp;hellip;</span>
</span><span class='line'><span class="k">&amp;</span><span class="nt">amp</span><span class="o">;</span><span class="nc">.full-article</span> <span class="p">{</span><span class="na">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="na">&lt;pre&gt;&lt;code&gt;//</span><span class="err"> </span><span class="na">This</span><span class="err"> </span><span class="na">is</span><span class="err"> </span><span class="na">needed</span><span class="err"> </span><span class="na">for</span><span class="err"> </span><span class="na">Firefox</span><span class="err"> </span><span class="na">and</span><span class="err"> </span><span class="na">Opera</span><span class="err"> </span><span class="na">(afaik)</span>
</span><span class='line'><span class="c1">// Because they can&#39;t perform a transition from auto to N pixels</span>
</span><span class='line'><span class="na">top</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="na">background-color</span><span class="o">:</span> <span class="nf">rgba</span><span class="p">(</span><span class="mi">170</span><span class="o">,</span><span class="mi">170</span><span class="o">,</span><span class="mi">170</span><span class="o">,</span><span class="mi">0</span><span class="mf">.2</span><span class="p">);</span>
</span><span class='line'><span class="c1">// This line will tell which property has to translate</span>
</span><span class='line'><span class="k">@include</span><span class="nd"> transition-property</span><span class="p">(</span><span class="no">top</span><span class="p">);</span>
</span><span class='line'><span class="c1">// Tis mixin will set the transition duration</span>
</span><span class='line'><span class="k">@include</span><span class="nd"> transition-duration</span><span class="p">(</span><span class="mi">0</span><span class="mf">.5</span><span class="kt">s</span><span class="p">);</span>
</span><span class='line'><span class="k">&amp;</span><span class="nt">amp</span><span class="o">;</span><span class="nd">:hover</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// This will trigger the transition and set the &#39;destination&#39;</span>
</span><span class='line'>    <span class="c1">// value of the top attribute on hover</span>
</span><span class='line'>    <span class="na">top</span><span class="o">:</span> <span class="o">-</span><span class="nv">$height</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">code</span><span class="o">&gt;&lt;/</span><span class="nt">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>So these <strong>25 lines of SCSS code</strong> make me puking rainbows just because they will be compiled to <strong>60+ lines of CSS code</strong> and basically there&rsquo;s why you should use Compass+SCSS or shoot yourself.
<strong>PEACE!</strong></p>
]]></content>
  </entry>
  
</feed>
